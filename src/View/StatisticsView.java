/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import java.awt.Color;
import javax.swing.JButton;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PiePlot;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.general.DefaultPieDataset;

/**
 *
 * @author giuli
 */
public class StatisticsView extends javax.swing.JPanel {

    /**
     * Creates new form Statistics
     */
    public StatisticsView() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        buttonGenerateGraph = new javax.swing.JButton();

        setMinimumSize(new java.awt.Dimension(590, 490));
        setPreferredSize(new java.awt.Dimension(590, 490));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setText("PIE CHART");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 270, -1, 30));

        jButton2.setText("LINE CHART");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 270, 110, 30));

        buttonGenerateGraph.setText("OK");
        buttonGenerateGraph.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonGenerateGraphActionPerformed(evt);
            }
        });
        add(buttonGenerateGraph, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 50, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    public JButton getButtonGenerateGraph() {
        return buttonGenerateGraph;
    }

    public void setButtonGenerateGraph(JButton buttonGenerateGraph) {
        this.buttonGenerateGraph = buttonGenerateGraph;
    }

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        DefaultPieDataset pieDataset = new DefaultPieDataset();
        pieDataset.setValue("One", new Integer(10));
        pieDataset.setValue("Two", new Integer(20));
        pieDataset.setValue("Three", new Integer(30));
        JFreeChart chart = ChartFactory.createPieChart("Pie Chart", pieDataset, true, true, true);
        PiePlot P = (PiePlot) chart.getPlot();
        //P.setForegroundAlpha(TOP_ALIGNMENT);
        ChartFrame frame = new ChartFrame("Pie Chart", chart);
        frame.setVisible(true);
        frame.setSize(450,500);
        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        
        DefaultCategoryDataset linedataset = new DefaultCategoryDataset();
        linedataset.setValue(new Double(20), "", "1");
        linedataset.setValue(new Double(40), "", "2");
        linedataset.setValue(new Double(50), "", "3");
        
        JFreeChart chart = ChartFactory.createLineChart("LINE CHART", "PARAMETRI", "VALORI", linedataset);
        CategoryPlot p = chart.getCategoryPlot();
        p.setRangeGridlinePaint(Color.BLUE);
        ChartFrame frame = new ChartFrame("Bar Chart for Parameters", chart);
        frame.setVisible(true);
        frame.setSize(450,500);
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void buttonGenerateGraphActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonGenerateGraphActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buttonGenerateGraphActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonGenerateGraph;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    // End of variables declaration//GEN-END:variables
}
